steps:
  # Install required tools
  - name: 'gcr.io/cloud-builders/apt-get'
    id: 'install-tools'
    args: ['update']
  
  - name: 'gcr.io/cloud-builders/apt-get'
    args: ['install', '-y', 'jq']
    wait_for: ['install-tools']

  # Debug step to show environment variables
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'debug-info'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "=== DEBUG INFORMATION ==="
        echo "Build ID: $BUILD_ID"
        echo "Project ID: $PROJECT_ID"
        echo "Commit SHA: $COMMIT_SHA"
        echo "Branch: $BRANCH_NAME"
        echo "Repository: $REPO_NAME"
        echo "Trigger Name: $TRIGGER_NAME"
        echo "=========================="
        
        # List all environment variables
        echo "\nAll Environment Variables:"
        env | sort
        
        # Check if we can access git info
        echo "\nGit Information:"
        git log -1 || echo "Cannot access git information"
        
        # List our restructured project directories
        echo "\nProject Structure:"
        ls -la
        echo "\nAgents Directory:"
        ls -la agents/ || echo "Agents directory not found"

  # Step to create a simple event and publish to Pub/Sub
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'publish-to-pubsub'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create a simple event JSON
        echo "Creating simple event JSON..."
        
        # Create a simple JSON payload using only Cloud Build built-in substitutions
        # Valid substitutions: $PROJECT_ID, $BUILD_ID, $COMMIT_SHA, $BRANCH_NAME, $TAG_NAME, $REVISION_ID, $REPO_NAME, $SHORT_SHA
        
        # Create a simple JSON payload
        echo "{
          \"repository\": {
            \"name\": \"$REPO_NAME\",
            \"full_name\": \"$PROJECT_ID/$REPO_NAME\"
          },
          \"ref\": \"refs/heads/$BRANCH_NAME\",
          \"pusher\": {
            \"name\": \"Cloud Build\",
            \"email\": \"cloud-build@example.com\"
          },
          \"commits\": [{
            \"id\": \"$COMMIT_SHA\",
            \"message\": \"Triggered by Cloud Build - $BUILD_ID\",
            \"author\": {
              \"name\": \"Cloud Build\",
              \"email\": \"cloud-build@example.com\"
            },
            \"added\": [],
            \"modified\": [\"cloudbuild.yaml\"],
            \"removed\": []
          }]
        }" > /workspace/event.json
        
        # Print the event data for debugging
        echo "\nEvent JSON Payload:"
        cat /workspace/event.json
        
        # Check if the Pub/Sub topic exists
        echo "\nChecking if Pub/Sub topic exists..."
        gcloud pubsub topics describe github-events --project=$PROJECT_ID || echo "Topic does not exist"
        
        # Publish to Pub/Sub
        echo "\nPublishing to Pub/Sub topic..."
        gcloud pubsub topics publish github-events --message="$(cat /workspace/event.json)" --project=$PROJECT_ID
        
        echo "\nPublished event to github-events topic"
        
        # List subscriptions to verify they exist
        echo "\nListing subscriptions for the topic:"
        gcloud pubsub topics list-subscriptions github-events --project=$PROJECT_ID || echo "Failed to list subscriptions"

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - 'TOPIC_NAME=github-events'

# Timeout for the entire build
timeout: '600s'

