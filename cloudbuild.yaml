steps:
  # Simple step to publish a static message to Pub/Sub
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'publish-to-pubsub'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create a simple static JSON payload
        echo '{
          "repository": {
            "name": "github-pubsub",
            "full_name": "github-pubsub"
          },
          "ref": "refs/heads/main",
          "pusher": {
            "name": "Cloud Build",
            "email": "cloud-build@example.com"
          },
          "commits": [{
            "id": "123456",
            "message": "Triggered by Cloud Build",
            "author": {
              "name": "Cloud Build",
              "email": "cloud-build@example.com"
            }
          }]
        }' > /workspace/event.json
        
        # Print the event data for debugging
        cat /workspace/event.json
        
        # Publish to Pub/Sub
        gcloud pubsub topics publish github-events --message-file=/workspace/event.json
        
        echo "Published event to github-events topic"
        
        # Print the event data for debugging
        cat /workspace/event.json

  # Publish event to Pub/Sub
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'publish-event'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Publish the event to Pub/Sub
        gcloud pubsub topics publish github-events --message-body="$(cat /workspace/event.json)"
        echo "Published event to github-events topic"

# Build options
options:
  logging: CLOUD_LOGGING_ONLY

# Timeout for the entire build
timeout: '600s'
